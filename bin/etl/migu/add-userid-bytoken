#!/usr/bin/env node
/**
 * LambdaCloud copyright 2015.
 *
 */
var program = require('commander');
var _ = require('lodash');
var jsonStream = require("json-stream");
var eventStream = require('event-stream');
var moment = require('moment');
var util = require('util');
//use stream, jsonAddField to pipe data to standard output
var lambdaUtil = require('../../../lambda-util');
var stream = jsonStream();
var jsonLine = new lambdaUtil.JsonLine();


// use pipe deal with the data from standard in
process.stdin
  .pipe(stream)
  .pipe(eventStream.through(parseToken))
  .pipe(jsonLine)
  .pipe(process.stdout);

function parseToken(data) {
	var source = data._source;
	var sourceStr = JSON.stringify(source);
	var regex = /token[\"]?:[ ]?[\"]?(\w+)-(\d+)-(\d+)[\"]?[\,]?/i;
	if (regex.test(sourceStr)) {
		var token = sourceStr.match(regex);
		var userid = token[2];
		var roleid = token[3];
		if (source['userid']) {
			if ( userid != source['userid']) {
				var err = new Error(util.format('日志中找不到服务器字段或者服务器字段不符合格式, detail: %s, pattern: %s', JSON.stringify(data), regex));
          		throw err;
			}
		}
		data._source = {};
		data._source['userid'] = userid;
		data._source['roleid'] = roleid;
		if(parseInt(userid)&&parseInt(roleid)) {
			data._source['#userid'] = parseInt(userid);
			data._source['#roleid'] = parseInt(roleid);			
		}
		this.push(data);
	}
	
}